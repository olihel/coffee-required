{
  "name": "require-cs",
  "version": "0.4.4",
  "dependencies": {
    "coffee-script": "https://raw.github.com/jashkenas/coffee-script/1.6.2/extras/coffee-script.js"
  },
  "gitHead": "d4fd32d3a664d440df9f9e7e12b6c738818728d6",
  "readme": "# require-cs\n\nA [CoffeeScript](http://jashkenas.github.com/coffee-script/) loader plugin\nthat may work with module loaders like [RequireJS](http://requirejs.org),\n[curl](https://github.com/unscriptable/curl) and\n[backdraft](http://bdframework.org/bdLoad/docs/bdLoad-tutorial/bdLoad-tutorial.html).\n\nIt is known to work with RequireJS 1.0+.\n\nThis loader plugin makes it easy to write your JS functionality in CoffeeScript,\nand easily use it in the browser, Node or Rhino. Plus, if you use the RequireJS\noptimizer, your CoffeeScript files can be translated to JavaScript, and inlined\ninto optimized layers for fast performance.\n\nIn development, it uses XMLHttpRequest to fetch the .coffee files, so you can only\nfetch files that are on the same domain as the HTML page, and most browsers place\nrestrictions on using XMLHttpRequest from local file URLs, so use a web server to\nserve your .coffee files.\n\n## Install <a name=\"install\"></a>\n\n### Volo\n\nTo install with [Volo](http://volojs.org):\n\n```\n  volo add require-cs\n```\n\nThis will install `cs.js` and `coffee-script.js` into the baseUrl folder, and no further configuration is necessary.\n\n### Bower\n\nTo install with [Bower](http://bower.io/):\n\n```\n  bower install require-cs\n```\n\nSince bower installs `require-cs` and `require-coffee` into separate folders, add the following RequireJS [package configuration](http://requirejs.org/docs/api.html#packages):\n\n```javascript\n{\n  packages: [\n  {\n    name: 'cs',\n    location: 'require-cs',\n    main: 'cs'\n  },\n  {\n    name: 'coffee-script',\n    main: 'index'\n  }\n  ]\n}\n```\n\n### Manual Download\n\n1) Download CoffeeScript for the browser that registers as an AMD module. You\ncan do that by using a \"raw\" GitHub URL. It takes the form of:\n\n    https://raw.github.com/jashkenas/coffee-script/[BRANCH-OR-VERSION]/extras/coffee-script.js\n\nExample links:\n\n* [master](https://raw.github.com/jashkenas/coffee-script/master/extras/coffee-script.js)\n* [1.3.3](https://raw.github.com/jashkenas/coffee-script/1.3.3/extras/coffee-script.js)\n\nPlace this in the directory that is your\n[baseUrl](http://requirejs.org/docs/api.html#config-baseUrl) for your project,\nor set up a [paths config](http://requirejs.org/docs/api.html#config-paths)\nfor it for the module ID `coffee-script`. The cs.js file specifies `coffee-script`\nas a dependency.\n\n2) Download the [latest version of cs.js](https://raw.github.com/jrburke/require-cs/latest/cs.js).\n\n## Usage <a name=\"usage\".</a>\n\nReference CoffeeScript files via the cs! plugin name. For example, to load\nthe `app.coffee` file that is in your baseUrl directory:\n\n    require(['cs!app'], function (app) {\n\n    });\n\nOr, if creating a module that depends on `util.coffee`:\n\n    define(['cs!util'], function (util) {\n        util.doSomething();\n    });\n\nIf you are using define() in a module written with CoffeeScript:\n\n    define ['cs!util'], (util) ->\n        util.doSomething\n\n[Literate CoffeeScript](http://coffeescript.org/#literate) was introduced in CoffeeScript 1.5.0.\nTo utilize this feature with this plugin you will need to have downloaded >= 1.5.0\nof CoffeeScript and qualify the file (with extension) of the literate module you wish to use.\n\nA dependency on the literate module `app.litcoffee`:\n\n    require ['cs!app.litcoffee'], (litapp) ->\n      litapp.foo()\n      # ...\n\nOr a dependency on the literate module `util.coffee.md`:\n\n    define ['cs!util.coffee.md'], (litutil) ->\n      litutil.doSomething()\n      # ...\n\nNote: This plugin supports a mixture of literate and regular CoffeeScript files in the\nsame project.\n\n**VERY IMPORTANT**: Only define anonymous modules using CoffeeScript. Otherwise,\nthe optimization work will not happen correctly -- the name of the module is changed\nto allow inlining of the translated JS content.\n\n## Complete web project <a name=\"demo\"></a>\n\nThe **demo** directory shows a complete web example. See the demo/index.html file\nas the entry point into the demo. It is not a fancy demo, just shows basic use.\n\nIf you have node installed and need to run a web server to try out the demo,\nin this directory run `npm install send`, then start up the demo web server\nby running:\n\n    node demoserver.js\n\n# Optimizing <a name=\"optimizing\"></a>\n\nSee **demo/build.sh** for an example build script that drives the optimizer with\nthe **demo/build.js** build config.\n\nThe build will generate a **demo-build** directory with the optimized files. Where\nthe unoptimized demo directory will load 7 files, the optimized one only loads 2,\nand the CoffeeScript files have been converted to JavaScript. Since all the CoffeeScript\nmodules have been converted to JS after the build, the CoffeeScript module and\nthe source cs.js module are not included/needed in the built file.\n\nIf you want to do dynamic loading of CoffeeScript files after a build, then\ncomment out `stubModules: ['cs']` and `exclude: ['coffee-script']` from the build\nfile so that they will be included in the build.\n\n## License <a name=\"license\"></a>\n\nAvailable via the MIT or new BSD license.\n",
  "readmeFilename": "README.md",
  "_id": "require-cs@0.4.4",
  "description": "A [CoffeeScript](http://jashkenas.github.com/coffee-script/) loader plugin that may work with module loaders like [RequireJS](http://requirejs.org), [curl](https://github.com/unscriptable/curl) and [backdraft](http://bdframework.org/bdLoad/docs/bdLoad-tutorial/bdLoad-tutorial.html).",
  "repository": {
    "type": "git",
    "url": "git://github.com/jrburke/require-cs.git"
  }
}